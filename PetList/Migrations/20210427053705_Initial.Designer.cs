// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetList.Models;

namespace PetList.Migrations
{
    [DbContext(typeof(PetListContext))]
    [Migration("20210427053705_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PetList.Models.Classification", b =>
                {
                    b.Property<string>("ClassificationId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("ClassificationId");

                    b.ToTable("Classifications");

                    b.HasData(
                        new
                        {
                            ClassificationId = "dog",
                            Name = "Dog"
                        },
                        new
                        {
                            ClassificationId = "cat",
                            Name = "Cat"
                        },
                        new
                        {
                            ClassificationId = "bird",
                            Name = "Bird"
                        },
                        new
                        {
                            ClassificationId = "elephant",
                            Name = "Elephant"
                        },
                        new
                        {
                            ClassificationId = "kangaroo",
                            Name = "Kangaroo"
                        });
                });

            modelBuilder.Entity("PetList.Models.Owner", b =>
                {
                    b.Property<int>("OwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("OwnerId");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            OwnerId = 1,
                            FirstName = "Sam",
                            LastName = "Smith"
                        },
                        new
                        {
                            OwnerId = 2,
                            FirstName = "Calvin",
                            LastName = "John"
                        },
                        new
                        {
                            OwnerId = 3,
                            FirstName = "Luke",
                            LastName = "Jackson"
                        },
                        new
                        {
                            OwnerId = 4,
                            FirstName = "Jerry",
                            LastName = "Springer"
                        },
                        new
                        {
                            OwnerId = 5,
                            FirstName = "Jack",
                            LastName = "Smithson"
                        });
                });

            modelBuilder.Entity("PetList.Models.Pet", b =>
                {
                    b.Property<int>("PetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassificationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("PetId");

                    b.HasIndex("ClassificationId");

                    b.ToTable("Pets");

                    b.HasData(
                        new
                        {
                            PetId = 1,
                            ClassificationId = "Cat",
                            Name = "Kumar",
                            Weight = 12.1
                        },
                        new
                        {
                            PetId = 2,
                            ClassificationId = "Dog",
                            Name = "Max",
                            Weight = 7.2000000000000002
                        },
                        new
                        {
                            PetId = 3,
                            ClassificationId = "Bird",
                            Name = "Suzie",
                            Weight = 0.80000000000000004
                        },
                        new
                        {
                            PetId = 4,
                            ClassificationId = "Dog",
                            Name = "Mimi",
                            Weight = 55.5
                        },
                        new
                        {
                            PetId = 5,
                            ClassificationId = "Dog",
                            Name = "Fluffy",
                            Weight = 22.100000000000001
                        });
                });

            modelBuilder.Entity("PetList.Models.PetOwner", b =>
                {
                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("PetId", "OwnerId");

                    b.HasIndex("OwnerId");

                    b.ToTable("PetOwners");

                    b.HasData(
                        new
                        {
                            PetId = 1,
                            OwnerId = 11
                        },
                        new
                        {
                            PetId = 2,
                            OwnerId = 33
                        },
                        new
                        {
                            PetId = 3,
                            OwnerId = 18
                        },
                        new
                        {
                            PetId = 4,
                            OwnerId = 55
                        },
                        new
                        {
                            PetId = 5,
                            OwnerId = 99
                        });
                });

            modelBuilder.Entity("PetList.Models.Pet", b =>
                {
                    b.HasOne("PetList.Models.Classification", "Classification")
                        .WithMany("Pets")
                        .HasForeignKey("ClassificationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PetList.Models.PetOwner", b =>
                {
                    b.HasOne("PetList.Models.Owner", "Owner")
                        .WithMany("PetOwners")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetList.Models.Pet", "Pet")
                        .WithMany("PetOwners")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
